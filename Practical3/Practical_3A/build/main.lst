ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB135:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** #include <stdio.h>  // Add this for printf
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** #define MAX_ITER 1000
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //Task 1
  48:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  49:Core/Src/main.c **** /*
  50:Core/Src/main.c ****   start_time
  51:Core/Src/main.c ****   end_time
  52:Core/Src/main.c ****   execution_time
  53:Core/Src/main.c ****   checksum: should be uint64_t
  54:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  55:Core/Src/main.c **** */
  56:Core/Src/main.c **** // Define global variables for Mandelbrot benchmarking
  57:Core/Src/main.c **** uint64_t checksum = 0;   // checksum returned from Mandelbrot functions
  58:Core/Src/main.c **** uint32_t start_time = 0;   // start time in ms (HAL_GetTick)
  59:Core/Src/main.c **** uint32_t end_time = 0;   // end time in ms (HAL_GetTick)
  60:Core/Src/main.c **** uint32_t execution_time = 0;   // execution time (end_time - start_time)
  61:Core/Src/main.c **** const int image_sizes[] = {128, 160, 192, 224, 256};   // array of square image dimensions
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** uint64_t checksums_fixed[5] = {0};   // store fixed-point checksums
  64:Core/Src/main.c **** uint64_t checksums_double[5] = {0};   // store double checksums
  65:Core/Src/main.c **** uint32_t times_fixed[5] = {0};   // store fixed-point execution times
  66:Core/Src/main.c **** uint32_t times_double[5] = {0};   // store double execution times
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PV */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END PV */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END PV */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  77:Core/Src/main.c **** void SystemClock_Config(void);
  78:Core/Src/main.c **** static void MX_GPIO_Init(void);
  79:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  80:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  81:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* USER CODE END PFP */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  87:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 3


  89:Core/Src/main.c **** /* USER CODE END 0 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /**
  92:Core/Src/main.c ****   * @brief  The application entry point.
  93:Core/Src/main.c ****   * @retval int
  94:Core/Src/main.c ****   */
  95:Core/Src/main.c **** int main(void)
  96:Core/Src/main.c **** {
  97:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 104:Core/Src/main.c ****   HAL_Init();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Configure the system clock */
 111:Core/Src/main.c ****   SystemClock_Config();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Initialize all configured peripherals */
 118:Core/Src/main.c ****   MX_GPIO_Init();
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   // Task 3
 122:Core/Src/main.c ****   // Iterate through all five square images (i.e. width = height) of dimensions (128, 160, 192, 224
 123:Core/Src/main.c ****   for (int i = 0; i < 5; i++) {
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** 	  // Fixed-point arithmetic:
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** 	  //TODO: Turn on LED 0 to signify the start of the operation
 128:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** 	  //TODO: Record the start time
 131:Core/Src/main.c **** 	  start_time = HAL_GetTick();
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** 	  //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initi
 134:Core/Src/main.c **** 	  checksum = calculate_mandelbrot_fixed_point_arithmetic(image_sizes[i], image_sizes[i], MAX_ITER)
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 	  //TODO: Record the end time
 137:Core/Src/main.c **** 	  end_time = HAL_GetTick();
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 	  //TODO: Calculate the execution time
 140:Core/Src/main.c **** 	  execution_time = end_time - start_time;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** 	  // Store checksums and execution times for fixed-point arithmetic
 143:Core/Src/main.c **** 	  checksums_fixed[i] = checksum;
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** 	  times_fixed[i] = execution_time;
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 	  //TODO: Turn on LED 1 to signify the end of the operation
 149:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** 	  //TODO: Hold the LEDs on for a 1s delay
 152:Core/Src/main.c **** 	  HAL_Delay(1000);
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** 	  //TODO: Turn off the LEDs
 155:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 156:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   for (int i = 0; i < 5; i++) {
 164:Core/Src/main.c **** 	  // Repeated Task 3 for double-precision arithmetic:
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 	  start_time = HAL_GetTick();
 169:Core/Src/main.c **** 	  checksum = calculate_mandelbrot_double(image_sizes[i], image_sizes[i], MAX_ITER);
 170:Core/Src/main.c **** 	  end_time = HAL_GetTick();
 171:Core/Src/main.c **** 	  execution_time = end_time - start_time;
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** 	  // Store checksums and execution times for double-precision arithmetic
 174:Core/Src/main.c **** 	  checksums_double[i] = checksum;
 175:Core/Src/main.c **** 	  times_double[i] = execution_time;
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 178:Core/Src/main.c **** 	  HAL_Delay(1000);
 179:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 180:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END 2 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* Infinite loop */
 190:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 191:Core/Src/main.c ****   while (1)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     /* USER CODE END WHILE */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c ****   /* USER CODE END 3 */
 198:Core/Src/main.c **** }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /**
 201:Core/Src/main.c ****   * @brief System Clock Configuration
 202:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 5


 203:Core/Src/main.c ****   */
 204:Core/Src/main.c **** void SystemClock_Config(void)
 205:Core/Src/main.c **** {
 206:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 207:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 210:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 213:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 214:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 216:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 224:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 225:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 226:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 227:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     Error_Handler();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c **** }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** /**
 236:Core/Src/main.c ****   * @brief GPIO Initialization Function
 237:Core/Src/main.c ****   * @param None
 238:Core/Src/main.c ****   * @retval None
 239:Core/Src/main.c ****   */
 240:Core/Src/main.c **** static void MX_GPIO_Init(void)
 241:Core/Src/main.c **** {
  28              		.loc 1 241 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 242:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 242 3 view .LVU1
  42              		.loc 1 242 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 6


  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 243:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 244:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 247:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  49              		.loc 1 247 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 247 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 247 3 view .LVU5
  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00202 		orr	r2, r2, #2
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 247 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00202 		and	r2, r2, #2
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 247 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 247 3 view .LVU8
 248:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 248 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 248 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 248 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 248 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 248 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 248 3 view .LVU14
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 251:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  82              		.loc 1 251 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 0321     		movs	r1, #3
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 254:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  89              		.loc 1 254 3 view .LVU16
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 7


  90              		.loc 1 254 23 is_stmt 0 view .LVU17
  91 0046 0323     		movs	r3, #3
  92 0048 0393     		str	r3, [sp, #12]
 255:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 255 3 is_stmt 1 view .LVU18
  94              		.loc 1 255 24 is_stmt 0 view .LVU19
  95 004a 0123     		movs	r3, #1
  96 004c 0493     		str	r3, [sp, #16]
 256:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 256 3 is_stmt 1 view .LVU20
  98              		.loc 1 256 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 257:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 257 3 is_stmt 1 view .LVU22
 101              		.loc 1 257 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
 258:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 103              		.loc 1 258 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 261:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 262:Core/Src/main.c **** }
 108              		.loc 1 262 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 005e 00BF     		.align	2
 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00040240 		.word	1073873920
 119              		.cfi_endproc
 120              	.LFE135:
 122              		.global	__aeabi_i2d
 123              		.global	__aeabi_ddiv
 124              		.global	__aeabi_d2iz
 125              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 126              		.align	1
 127              		.global	calculate_mandelbrot_fixed_point_arithmetic
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 132              	calculate_mandelbrot_fixed_point_arithmetic:
 133              	.LVL2:
 134              	.LFB136:
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 265:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** // Task 2
 268:Core/Src/main.c **** // Fixed-point Mandelbrot function
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 8


 269:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations) {
 135              		.loc 1 269 97 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 32
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		.loc 1 269 97 is_stmt 0 view .LVU27
 140 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 36
 143              		.cfi_offset 4, -36
 144              		.cfi_offset 5, -32
 145              		.cfi_offset 6, -28
 146              		.cfi_offset 7, -24
 147              		.cfi_offset 8, -20
 148              		.cfi_offset 9, -16
 149              		.cfi_offset 10, -12
 150              		.cfi_offset 11, -8
 151              		.cfi_offset 14, -4
 152 0004 89B0     		sub	sp, sp, #36
 153              	.LCFI4:
 154              		.cfi_def_cfa_offset 72
 155 0006 8146     		mov	r9, r0
 156 0008 0E46     		mov	r6, r1
 157 000a 1446     		mov	r4, r2
 270:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 158              		.loc 1 270 5 is_stmt 1 view .LVU28
 159              	.LVL3:
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****     // Larger scale factor for higher precision (16.16 fixed-point)
 273:Core/Src/main.c ****     const int32_t SCALE = 1 << 16;
 160              		.loc 1 273 5 view .LVU29
 274:Core/Src/main.c ****     const int64_t FOUR_SCALED = 4LL * SCALE;
 161              		.loc 1 274 5 view .LVU30
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****     // Map pixel coordinates to [-2.5, 1] x [-1, 1]
 277:Core/Src/main.c ****     const int32_t x_scale = (int32_t)((3.5 * SCALE) / width);
 162              		.loc 1 277 5 view .LVU31
 163              		.loc 1 277 53 is_stmt 0 view .LVU32
 164 000c FFF7FEFF 		bl	__aeabi_i2d
 165              	.LVL4:
 166              		.loc 1 277 53 view .LVU33
 167 0010 0246     		mov	r2, r0
 168 0012 0B46     		mov	r3, r1
 169 0014 0020     		movs	r0, #0
 170 0016 4F49     		ldr	r1, .L21
 171 0018 FFF7FEFF 		bl	__aeabi_ddiv
 172              	.LVL5:
 173              		.loc 1 277 19 view .LVU34
 174 001c FFF7FEFF 		bl	__aeabi_d2iz
 175              	.LVL6:
 176 0020 8246     		mov	r10, r0
 177              	.LVL7:
 278:Core/Src/main.c ****     const int32_t y_scale = (int32_t)((2.0 * SCALE) / height);
 178              		.loc 1 278 5 is_stmt 1 view .LVU35
 179              		.loc 1 278 53 is_stmt 0 view .LVU36
 180 0022 3046     		mov	r0, r6
 181              	.LVL8:
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 9


 182              		.loc 1 278 53 view .LVU37
 183 0024 FFF7FEFF 		bl	__aeabi_i2d
 184              	.LVL9:
 185 0028 0246     		mov	r2, r0
 186 002a 0B46     		mov	r3, r1
 187 002c 0020     		movs	r0, #0
 188 002e 4FF08241 		mov	r1, #1090519040
 189 0032 FFF7FEFF 		bl	__aeabi_ddiv
 190              	.LVL10:
 191              		.loc 1 278 19 view .LVU38
 192 0036 FFF7FEFF 		bl	__aeabi_d2iz
 193              	.LVL11:
 279:Core/Src/main.c ****     const int32_t x_offset = (int32_t)(-2.5 * SCALE);
 194              		.loc 1 279 5 is_stmt 1 view .LVU39
 280:Core/Src/main.c ****     const int32_t y_offset = (int32_t)(-1.0 * SCALE);
 195              		.loc 1 280 5 view .LVU40
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 196              		.loc 1 282 5 view .LVU41
 197              	.LBB6:
 198              		.loc 1 282 10 view .LVU42
 199              		.loc 1 282 14 is_stmt 0 view .LVU43
 200 003a 0025     		movs	r5, #0
 201 003c 2F46     		mov	r7, r5
 202 003e CDF810A0 		str	r10, [sp, #16]
 203 0042 0790     		str	r0, [sp, #28]
 204 0044 CDF80C90 		str	r9, [sp, #12]
 205 0048 0696     		str	r6, [sp, #24]
 206 004a 0195     		str	r5, [sp, #4]
 207 004c AC46     		mov	ip, r5
 208              		.loc 1 282 5 view .LVU44
 209 004e 6DE0     		b	.L6
 210              	.LVL12:
 211              	.L17:
 212              	.LBB7:
 213              	.LBB8:
 214              	.LBB9:
 215              	.LBB10:
 283:Core/Src/main.c ****         int32_t y0 = y * y_scale + y_offset;
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 286:Core/Src/main.c ****             int32_t x0 = x * x_scale + x_offset;
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****             int32_t xi = 0;
 289:Core/Src/main.c ****             int32_t yi = 0;
 290:Core/Src/main.c ****             int iteration = 0;
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****             while (iteration < max_iterations) {
 293:Core/Src/main.c ****                 // Promote to 64-bit before multiply
 294:Core/Src/main.c ****                 int64_t xi_sq = ((int64_t)xi * xi) / SCALE;
 216              		.loc 1 294 25 view .LVU45
 217 0050 4FF6FF73 		movw	r3, #65535
 218 0054 C318     		adds	r3, r0, r3
 219 0056 1846     		mov	r0, r3
 220 0058 46F10003 		adc	r3, r6, #0
 221 005c 1BE0     		b	.L9
 222              	.LVL13:
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 10


 223              	.L18:
 295:Core/Src/main.c ****                 int64_t yi_sq = ((int64_t)yi * yi) / SCALE;
 224              		.loc 1 295 25 view .LVU46
 225 005e 4FF6FF7A 		movw	r10, #65535
 226 0062 12EB0A0A 		adds	r10, r2, r10
 227 0066 5246     		mov	r2, r10
 228 0068 4BF1000A 		adc	r10, fp, #0
 229 006c 24E0     		b	.L10
 230              	.LVL14:
 231              	.L12:
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****                 // Escape condition
 298:Core/Src/main.c ****                 if (xi_sq + yi_sq > FOUR_SCALED)
 299:Core/Src/main.c ****                     break;
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****                 int64_t temp = xi_sq - yi_sq + x0;
 302:Core/Src/main.c ****                 yi = (int32_t)(((int64_t)2 * xi * yi) / SCALE + y0);
 232              		.loc 1 302 55 view .LVU47
 233 006e D20B     		lsrs	r2, r2, #15
 234 0070 42EA4042 		orr	r2, r2, r0, lsl #17
 235              		.loc 1 302 63 view .LVU48
 236 0074 4244     		add	r2, r2, r8
 237              	.LVL15:
 303:Core/Src/main.c ****                 xi = (int32_t)(temp);
 238              		.loc 1 303 17 is_stmt 1 view .LVU49
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****                 iteration++;
 239              		.loc 1 305 17 view .LVU50
 240              		.loc 1 305 26 is_stmt 0 view .LVU51
 241 0076 0CF1010C 		add	ip, ip, #1
 242              	.LVL16:
 243              	.L8:
 244              		.loc 1 305 26 view .LVU52
 245              	.LBE10:
 292:Core/Src/main.c ****                 // Promote to 64-bit before multiply
 246              		.loc 1 292 30 is_stmt 1 view .LVU53
 247 007a A445     		cmp	ip, r4
 248 007c 3DDA     		bge	.L11
 249              	.LBB11:
 294:Core/Src/main.c ****                 int64_t yi_sq = ((int64_t)yi * yi) / SCALE;
 250              		.loc 1 294 17 view .LVU54
 294:Core/Src/main.c ****                 int64_t yi_sq = ((int64_t)yi * yi) / SCALE;
 251              		.loc 1 294 34 is_stmt 0 view .LVU55
 252 007e 4FEAE37E 		asr	lr, r3, #31
 253 0082 1946     		mov	r1, r3
 294:Core/Src/main.c ****                 int64_t yi_sq = ((int64_t)yi * yi) / SCALE;
 254              		.loc 1 294 46 view .LVU56
 255 0084 03FB0EF3 		mul	r3, r3, lr
 256              	.LVL17:
 294:Core/Src/main.c ****                 int64_t yi_sq = ((int64_t)yi * yi) / SCALE;
 257              		.loc 1 294 46 view .LVU57
 258 0088 A1FB0106 		umull	r0, r6, r1, r1
 259 008c 06EB4306 		add	r6, r6, r3, lsl #1
 294:Core/Src/main.c ****                 int64_t yi_sq = ((int64_t)yi * yi) / SCALE;
 260              		.loc 1 294 25 view .LVU58
 261 0090 3346     		mov	r3, r6
 262 0092 002E     		cmp	r6, #0
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 11


 263 0094 DCDB     		blt	.L17
 264              	.L9:
 265 0096 000C     		lsrs	r0, r0, #16
 266 0098 1F14     		asrs	r7, r3, #16
 267 009a 40EA0343 		orr	r3, r0, r3, lsl #16
 268              	.LVL18:
 295:Core/Src/main.c **** 
 269              		.loc 1 295 17 is_stmt 1 view .LVU59
 295:Core/Src/main.c **** 
 270              		.loc 1 295 34 is_stmt 0 view .LVU60
 271 009e D617     		asrs	r6, r2, #31
 272 00a0 1046     		mov	r0, r2
 295:Core/Src/main.c **** 
 273              		.loc 1 295 46 view .LVU61
 274 00a2 06FB02F2 		mul	r2, r6, r2
 275              	.LVL19:
 295:Core/Src/main.c **** 
 276              		.loc 1 295 46 view .LVU62
 277 00a6 A0FB00AB 		umull	r10, fp, r0, r0
 278 00aa 0BEB420B 		add	fp, fp, r2, lsl #1
 295:Core/Src/main.c **** 
 279              		.loc 1 295 25 view .LVU63
 280 00ae 5246     		mov	r2, r10
 281 00b0 DA46     		mov	r10, fp
 282 00b2 BBF1000F 		cmp	fp, #0
 283 00b6 D2DB     		blt	.L18
 284              	.L10:
 295:Core/Src/main.c **** 
 285              		.loc 1 295 25 view .LVU64
 286 00b8 120C     		lsrs	r2, r2, #16
 287 00ba 42EA0A42 		orr	r2, r2, r10, lsl #16
 288              	.LVL20:
 298:Core/Src/main.c ****                     break;
 289              		.loc 1 298 17 is_stmt 1 view .LVU65
 298:Core/Src/main.c ****                     break;
 290              		.loc 1 298 27 is_stmt 0 view .LVU66
 291 00be 13EB020B 		adds	fp, r3, r2
 292 00c2 47EB2A47 		adc	r7, r7, r10, asr #16
 293              	.LVL21:
 298:Core/Src/main.c ****                     break;
 294              		.loc 1 298 20 view .LVU67
 295 00c6 DFF890A0 		ldr	r10, .L21+4
 296              	.LVL22:
 298:Core/Src/main.c ****                     break;
 297              		.loc 1 298 20 view .LVU68
 298 00ca D345     		cmp	fp, r10
 299 00cc 77F10007 		sbcs	r7, r7, #0
 300 00d0 13DA     		bge	.L11
 301:Core/Src/main.c ****                 yi = (int32_t)(((int64_t)2 * xi * yi) / SCALE + y0);
 301              		.loc 1 301 17 is_stmt 1 view .LVU69
 301:Core/Src/main.c ****                 yi = (int32_t)(((int64_t)2 * xi * yi) / SCALE + y0);
 302              		.loc 1 301 38 is_stmt 0 view .LVU70
 303 00d2 9B1A     		subs	r3, r3, r2
 301:Core/Src/main.c ****                 yi = (int32_t)(((int64_t)2 * xi * yi) / SCALE + y0);
 304              		.loc 1 301 25 view .LVU71
 305 00d4 13EB0903 		adds	r3, r3, r9
 306              	.LVL23:
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 12


 302:Core/Src/main.c ****                 xi = (int32_t)(temp);
 307              		.loc 1 302 17 is_stmt 1 view .LVU72
 302:Core/Src/main.c ****                 xi = (int32_t)(temp);
 308              		.loc 1 302 49 is_stmt 0 view .LVU73
 309 00d8 01FB06F6 		mul	r6, r1, r6
 310 00dc 00FB0E66 		mla	r6, r0, lr, r6
 311 00e0 A1FB0021 		umull	r2, r1, r1, r0
 312              	.LVL24:
 302:Core/Src/main.c ****                 xi = (int32_t)(temp);
 313              		.loc 1 302 49 view .LVU74
 314 00e4 3144     		add	r1, r1, r6
 302:Core/Src/main.c ****                 xi = (int32_t)(temp);
 315              		.loc 1 302 55 view .LVU75
 316 00e6 0846     		mov	r0, r1
 317              	.LVL25:
 302:Core/Src/main.c ****                 xi = (int32_t)(temp);
 318              		.loc 1 302 55 view .LVU76
 319 00e8 0029     		cmp	r1, #0
 320 00ea C0DA     		bge	.L12
 302:Core/Src/main.c ****                 xi = (int32_t)(temp);
 321              		.loc 1 302 55 view .LVU77
 322 00ec 47F6FF70 		movw	r0, #32767
 323 00f0 1018     		adds	r0, r2, r0
 324 00f2 0246     		mov	r2, r0
 325 00f4 41F10000 		adc	r0, r1, #0
 326 00f8 B9E7     		b	.L12
 327              	.LVL26:
 328              	.L11:
 302:Core/Src/main.c ****                 xi = (int32_t)(temp);
 329              		.loc 1 302 55 view .LVU78
 330              	.LBE11:
 306:Core/Src/main.c ****             }
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****             mandelbrot_sum += iteration;
 331              		.loc 1 308 28 view .LVU79
 332 00fa 0298     		ldr	r0, [sp, #8]
 333              		.loc 1 308 13 is_stmt 1 view .LVU80
 334              		.loc 1 308 28 is_stmt 0 view .LVU81
 335 00fc 019B     		ldr	r3, [sp, #4]
 336 00fe 1CEB0303 		adds	r3, ip, r3
 337 0102 0193     		str	r3, [sp, #4]
 338              	.LVL27:
 339              		.loc 1 308 28 view .LVU82
 340 0104 45EBEC75 		adc	r5, r5, ip, asr #31
 341              	.LVL28:
 342              		.loc 1 308 28 view .LVU83
 343              	.LBE9:
 285:Core/Src/main.c ****             int32_t x0 = x * x_scale + x_offset;
 344              		.loc 1 285 37 is_stmt 1 discriminator 2 view .LVU84
 345 0108 0130     		adds	r0, r0, #1
 346              	.LVL29:
 347              	.L7:
 285:Core/Src/main.c ****             int32_t x0 = x * x_scale + x_offset;
 348              		.loc 1 285 27 discriminator 1 view .LVU85
 349 010a 039B     		ldr	r3, [sp, #12]
 350 010c 9842     		cmp	r0, r3
 351 010e 0ADA     		bge	.L19
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 13


 352              	.LBB12:
 286:Core/Src/main.c **** 
 353              		.loc 1 286 13 view .LVU86
 286:Core/Src/main.c **** 
 354              		.loc 1 286 28 is_stmt 0 view .LVU87
 355 0110 049B     		ldr	r3, [sp, #16]
 356 0112 03FB00F9 		mul	r9, r3, r0
 286:Core/Src/main.c **** 
 357              		.loc 1 286 21 view .LVU88
 358 0116 A9F52039 		sub	r9, r9, #163840
 359              	.LVL30:
 288:Core/Src/main.c ****             int32_t yi = 0;
 360              		.loc 1 288 13 is_stmt 1 view .LVU89
 289:Core/Src/main.c ****             int iteration = 0;
 361              		.loc 1 289 13 view .LVU90
 290:Core/Src/main.c **** 
 362              		.loc 1 290 13 view .LVU91
 292:Core/Src/main.c ****                 // Promote to 64-bit before multiply
 363              		.loc 1 292 13 view .LVU92
 290:Core/Src/main.c **** 
 364              		.loc 1 290 17 is_stmt 0 view .LVU93
 365 011a 4FF0000C 		mov	ip, #0
 289:Core/Src/main.c ****             int iteration = 0;
 366              		.loc 1 289 21 view .LVU94
 367 011e 6246     		mov	r2, ip
 288:Core/Src/main.c ****             int32_t yi = 0;
 368              		.loc 1 288 21 view .LVU95
 369 0120 6346     		mov	r3, ip
 370 0122 0290     		str	r0, [sp, #8]
 292:Core/Src/main.c ****                 // Promote to 64-bit before multiply
 371              		.loc 1 292 19 view .LVU96
 372 0124 A9E7     		b	.L8
 373              	.LVL31:
 374              	.L19:
 292:Core/Src/main.c ****                 // Promote to 64-bit before multiply
 375              		.loc 1 292 19 view .LVU97
 376              	.LBE12:
 377              	.LBE8:
 378              	.LBE7:
 282:Core/Src/main.c ****         int32_t y0 = y * y_scale + y_offset;
 379              		.loc 1 282 34 discriminator 2 view .LVU98
 380 0126 059F     		ldr	r7, [sp, #20]
 381 0128 AC46     		mov	ip, r5
 282:Core/Src/main.c ****         int32_t y0 = y * y_scale + y_offset;
 382              		.loc 1 282 34 is_stmt 1 discriminator 2 view .LVU99
 383 012a 0137     		adds	r7, r7, #1
 384              	.LVL32:
 385              	.L6:
 282:Core/Src/main.c ****         int32_t y0 = y * y_scale + y_offset;
 386              		.loc 1 282 23 discriminator 1 view .LVU100
 387 012c 069B     		ldr	r3, [sp, #24]
 388 012e 9F42     		cmp	r7, r3
 389 0130 08DA     		bge	.L20
 390              	.LBB14:
 283:Core/Src/main.c **** 
 391              		.loc 1 283 9 view .LVU101
 283:Core/Src/main.c **** 
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 14


 392              		.loc 1 283 24 is_stmt 0 view .LVU102
 393 0132 079B     		ldr	r3, [sp, #28]
 394 0134 03FB07F8 		mul	r8, r3, r7
 283:Core/Src/main.c **** 
 395              		.loc 1 283 17 view .LVU103
 396 0138 A8F58038 		sub	r8, r8, #65536
 397              	.LVL33:
 285:Core/Src/main.c ****             int32_t x0 = x * x_scale + x_offset;
 398              		.loc 1 285 9 is_stmt 1 view .LVU104
 399              	.LBB13:
 285:Core/Src/main.c ****             int32_t x0 = x * x_scale + x_offset;
 400              		.loc 1 285 14 view .LVU105
 285:Core/Src/main.c ****             int32_t x0 = x * x_scale + x_offset;
 401              		.loc 1 285 18 is_stmt 0 view .LVU106
 402 013c 0020     		movs	r0, #0
 403 013e 0597     		str	r7, [sp, #20]
 404 0140 6546     		mov	r5, ip
 285:Core/Src/main.c ****             int32_t x0 = x * x_scale + x_offset;
 405              		.loc 1 285 9 view .LVU107
 406 0142 E2E7     		b	.L7
 407              	.LVL34:
 408              	.L20:
 285:Core/Src/main.c ****             int32_t x0 = x * x_scale + x_offset;
 409              		.loc 1 285 9 view .LVU108
 410              	.LBE13:
 411              	.LBE14:
 412              	.LBE6:
 309:Core/Src/main.c ****         }
 310:Core/Src/main.c ****     }
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****     return mandelbrot_sum;
 313:Core/Src/main.c **** }
 413              		.loc 1 313 1 view .LVU109
 414 0144 DDF804E0 		ldr	lr, [sp, #4]
 415 0148 6146     		mov	r1, ip
 312:Core/Src/main.c **** }
 416              		.loc 1 312 5 is_stmt 1 view .LVU110
 417              		.loc 1 313 1 is_stmt 0 view .LVU111
 418 014a 7046     		mov	r0, lr
 419 014c 09B0     		add	sp, sp, #36
 420              	.LCFI5:
 421              		.cfi_def_cfa_offset 36
 422              		@ sp needed
 423 014e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 424              	.LVL35:
 425              	.L22:
 426              		.loc 1 313 1 view .LVU112
 427 0152 00BF     		.align	2
 428              	.L21:
 429 0154 00000C41 		.word	1091305472
 430 0158 01000400 		.word	262145
 431              		.cfi_endproc
 432              	.LFE136:
 434              		.global	__aeabi_dmul
 435              		.global	__aeabi_dsub
 436              		.global	__aeabi_dadd
 437              		.global	__aeabi_dcmpgt
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 15


 438              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 439              		.align	1
 440              		.global	calculate_mandelbrot_double
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 445              	calculate_mandelbrot_double:
 446              	.LVL36:
 447              	.LFB137:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** // Task 4
 316:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 317:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations) {
 448              		.loc 1 317 81 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 72
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		.loc 1 317 81 is_stmt 0 view .LVU114
 453 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 454              	.LCFI6:
 455              		.cfi_def_cfa_offset 36
 456              		.cfi_offset 4, -36
 457              		.cfi_offset 5, -32
 458              		.cfi_offset 6, -28
 459              		.cfi_offset 7, -24
 460              		.cfi_offset 8, -20
 461              		.cfi_offset 9, -16
 462              		.cfi_offset 10, -12
 463              		.cfi_offset 11, -8
 464              		.cfi_offset 14, -4
 465 0004 93B0     		sub	sp, sp, #76
 466              	.LCFI7:
 467              		.cfi_def_cfa_offset 112
 468 0006 0C90     		str	r0, [sp, #48]
 469 0008 0C46     		mov	r4, r1
 470 000a 9246     		mov	r10, r2
 318:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 471              		.loc 1 318 5 is_stmt 1 view .LVU115
 472              	.LVL37:
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****     // Pre-calculate scaling factors to avoid repeated calculations
 321:Core/Src/main.c ****     const double x_scale = 3.5 / (double)width;
 473              		.loc 1 321 5 view .LVU116
 474              		.loc 1 321 34 is_stmt 0 view .LVU117
 475 000c FFF7FEFF 		bl	__aeabi_i2d
 476              	.LVL38:
 477              		.loc 1 321 34 view .LVU118
 478 0010 0246     		mov	r2, r0
 479 0012 0B46     		mov	r3, r1
 480              		.loc 1 321 18 view .LVU119
 481 0014 0020     		movs	r0, #0
 482 0016 4E49     		ldr	r1, .L35
 483 0018 FFF7FEFF 		bl	__aeabi_ddiv
 484              	.LVL39:
 485 001c CDE90A01 		strd	r0, [sp, #40]
 486              	.LVL40:
 322:Core/Src/main.c ****     const double y_scale = 2.0 / (double)height;
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 16


 487              		.loc 1 322 5 is_stmt 1 view .LVU120
 488              		.loc 1 322 34 is_stmt 0 view .LVU121
 489 0020 2046     		mov	r0, r4
 490              	.LVL41:
 491              		.loc 1 322 34 view .LVU122
 492 0022 FFF7FEFF 		bl	__aeabi_i2d
 493              	.LVL42:
 494 0026 0246     		mov	r2, r0
 495 0028 0B46     		mov	r3, r1
 496              		.loc 1 322 18 view .LVU123
 497 002a 0020     		movs	r0, #0
 498 002c 4FF08041 		mov	r1, #1073741824
 499 0030 FFF7FEFF 		bl	__aeabi_ddiv
 500              	.LVL43:
 501 0034 CDE91001 		strd	r0, [sp, #64]
 502              	.LVL44:
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 503              		.loc 1 324 5 is_stmt 1 view .LVU124
 504              	.LBB15:
 505              		.loc 1 324 10 view .LVU125
 506              		.loc 1 324 14 is_stmt 0 view .LVU126
 507 0038 0025     		movs	r5, #0
 508              	.LBE15:
 318:Core/Src/main.c **** 
 509              		.loc 1 318 14 view .LVU127
 510 003a 0795     		str	r5, [sp, #28]
 511 003c 2F46     		mov	r7, r5
 512 003e 0F94     		str	r4, [sp, #60]
 513 0040 CDF834A0 		str	r10, [sp, #52]
 514 0044 0895     		str	r5, [sp, #32]
 515              	.LBB24:
 516              		.loc 1 324 5 view .LVU128
 517 0046 67E0     		b	.L24
 518              	.LVL45:
 519              	.L32:
 520              	.LBB16:
 521              	.LBB17:
 522              	.LBB18:
 523              	.LBB19:
 325:Core/Src/main.c ****         double y0 = (double)y * y_scale - 1.0;
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 328:Core/Src/main.c ****             double x0 = (double)x * x_scale - 2.5;
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****             double xi = 0.0;
 331:Core/Src/main.c ****             double yi = 0.0;
 332:Core/Src/main.c ****             int iteration = 0;
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****             while (iteration < max_iterations) {
 335:Core/Src/main.c ****                 double xi_sq = xi * xi;
 336:Core/Src/main.c ****                 double yi_sq = yi * yi;
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****                 // Early termination check
 339:Core/Src/main.c ****                 if (xi_sq + yi_sq > 4.0) {
 340:Core/Src/main.c ****                     break;
 341:Core/Src/main.c ****                 }
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 17


 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****                 double temp = xi_sq - yi_sq + x0;
 524              		.loc 1 343 17 is_stmt 1 view .LVU129
 525              		.loc 1 343 37 is_stmt 0 view .LVU130
 526 0048 DDE90023 		ldrd	r2, [sp]
 527 004c 4046     		mov	r0, r8
 528 004e 4946     		mov	r1, r9
 529 0050 FFF7FEFF 		bl	__aeabi_dsub
 530              	.LVL46:
 531              		.loc 1 343 24 view .LVU131
 532 0054 DDE90223 		ldrd	r2, [sp, #8]
 533 0058 FFF7FEFF 		bl	__aeabi_dadd
 534              	.LVL47:
 535 005c 8046     		mov	r8, r0
 536              	.LVL48:
 537              		.loc 1 343 24 view .LVU132
 538 005e 8946     		mov	r9, r1
 539              	.LVL49:
 344:Core/Src/main.c ****                 yi = 2.0 * xi * yi + y0;
 540              		.loc 1 344 17 is_stmt 1 view .LVU133
 541              		.loc 1 344 26 is_stmt 0 view .LVU134
 542 0060 2246     		mov	r2, r4
 543 0062 2B46     		mov	r3, r5
 544 0064 2046     		mov	r0, r4
 545 0066 2946     		mov	r1, r5
 546 0068 FFF7FEFF 		bl	__aeabi_dadd
 547              	.LVL50:
 548              		.loc 1 344 31 view .LVU135
 549 006c 3246     		mov	r2, r6
 550 006e 3B46     		mov	r3, r7
 551 0070 FFF7FEFF 		bl	__aeabi_dmul
 552              	.LVL51:
 553              		.loc 1 344 20 view .LVU136
 554 0074 DDE90423 		ldrd	r2, [sp, #16]
 555 0078 FFF7FEFF 		bl	__aeabi_dadd
 556              	.LVL52:
 557 007c 0646     		mov	r6, r0
 558              	.LVL53:
 559              		.loc 1 344 20 view .LVU137
 560 007e 0F46     		mov	r7, r1
 561              	.LVL54:
 345:Core/Src/main.c ****                 xi = temp;
 562              		.loc 1 345 17 is_stmt 1 view .LVU138
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****                 iteration++;
 563              		.loc 1 347 17 view .LVU139
 564              		.loc 1 347 26 is_stmt 0 view .LVU140
 565 0080 0AF1010A 		add	r10, r10, #1
 566              	.LVL55:
 345:Core/Src/main.c ****                 xi = temp;
 567              		.loc 1 345 20 view .LVU141
 568 0084 4446     		mov	r4, r8
 569 0086 4D46     		mov	r5, r9
 570              	.LVL56:
 571              	.L26:
 345:Core/Src/main.c ****                 xi = temp;
 572              		.loc 1 345 20 view .LVU142
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 18


 573              	.LBE19:
 334:Core/Src/main.c ****                 double xi_sq = xi * xi;
 574              		.loc 1 334 30 is_stmt 1 view .LVU143
 575 0088 DA45     		cmp	r10, fp
 576 008a 1BDA     		bge	.L27
 577              	.LBB20:
 335:Core/Src/main.c ****                 double yi_sq = yi * yi;
 578              		.loc 1 335 17 view .LVU144
 335:Core/Src/main.c ****                 double yi_sq = yi * yi;
 579              		.loc 1 335 24 is_stmt 0 view .LVU145
 580 008c 2246     		mov	r2, r4
 581 008e 2B46     		mov	r3, r5
 582 0090 2046     		mov	r0, r4
 583 0092 2946     		mov	r1, r5
 584 0094 FFF7FEFF 		bl	__aeabi_dmul
 585              	.LVL57:
 586 0098 8046     		mov	r8, r0
 587 009a 8946     		mov	r9, r1
 588              	.LVL58:
 336:Core/Src/main.c **** 
 589              		.loc 1 336 17 is_stmt 1 view .LVU146
 336:Core/Src/main.c **** 
 590              		.loc 1 336 24 is_stmt 0 view .LVU147
 591 009c 3246     		mov	r2, r6
 592 009e 3B46     		mov	r3, r7
 593 00a0 3046     		mov	r0, r6
 594 00a2 3946     		mov	r1, r7
 595 00a4 FFF7FEFF 		bl	__aeabi_dmul
 596              	.LVL59:
 339:Core/Src/main.c ****                     break;
 597              		.loc 1 339 17 is_stmt 1 view .LVU148
 339:Core/Src/main.c ****                     break;
 598              		.loc 1 339 27 is_stmt 0 view .LVU149
 599 00a8 CDE90001 		strd	r0, [sp]
 600 00ac 0246     		mov	r2, r0
 601 00ae 0B46     		mov	r3, r1
 602 00b0 4046     		mov	r0, r8
 603              	.LVL60:
 339:Core/Src/main.c ****                     break;
 604              		.loc 1 339 27 view .LVU150
 605 00b2 4946     		mov	r1, r9
 606 00b4 FFF7FEFF 		bl	__aeabi_dadd
 607              	.LVL61:
 339:Core/Src/main.c ****                     break;
 608              		.loc 1 339 20 view .LVU151
 609 00b8 0022     		movs	r2, #0
 610 00ba 264B     		ldr	r3, .L35+4
 611 00bc FFF7FEFF 		bl	__aeabi_dcmpgt
 612              	.LVL62:
 613 00c0 0028     		cmp	r0, #0
 614 00c2 C1D0     		beq	.L32
 615              	.LVL63:
 616              	.L27:
 339:Core/Src/main.c ****                     break;
 617              		.loc 1 339 20 view .LVU152
 618              	.LBE20:
 348:Core/Src/main.c ****             }
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 19


 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****             mandelbrot_sum += iteration;
 619              		.loc 1 350 28 view .LVU153
 620 00c4 DDF82490 		ldr	r9, [sp, #36]
 621              		.loc 1 350 13 is_stmt 1 view .LVU154
 622              		.loc 1 350 28 is_stmt 0 view .LVU155
 623 00c8 079B     		ldr	r3, [sp, #28]
 624 00ca 1AEB0302 		adds	r2, r10, r3
 625 00ce 0792     		str	r2, [sp, #28]
 626              	.LVL64:
 627              		.loc 1 350 28 view .LVU156
 628 00d0 089B     		ldr	r3, [sp, #32]
 629 00d2 43EBEA73 		adc	r3, r3, r10, asr #31
 630 00d6 0893     		str	r3, [sp, #32]
 631              	.LVL65:
 632              		.loc 1 350 28 view .LVU157
 633              	.LBE18:
 327:Core/Src/main.c ****             double x0 = (double)x * x_scale - 2.5;
 634              		.loc 1 327 37 is_stmt 1 discriminator 2 view .LVU158
 635 00d8 09F10109 		add	r9, r9, #1
 636              	.LVL66:
 637              	.L25:
 327:Core/Src/main.c ****             double x0 = (double)x * x_scale - 2.5;
 638              		.loc 1 327 27 discriminator 1 view .LVU159
 639 00dc 0C9B     		ldr	r3, [sp, #48]
 640 00de 9945     		cmp	r9, r3
 641 00e0 18DA     		bge	.L33
 642              	.LBB21:
 328:Core/Src/main.c **** 
 643              		.loc 1 328 13 view .LVU160
 328:Core/Src/main.c **** 
 644              		.loc 1 328 25 is_stmt 0 view .LVU161
 645 00e2 4846     		mov	r0, r9
 646 00e4 FFF7FEFF 		bl	__aeabi_i2d
 647              	.LVL67:
 328:Core/Src/main.c **** 
 648              		.loc 1 328 35 view .LVU162
 649 00e8 DDE90A23 		ldrd	r2, [sp, #40]
 650 00ec FFF7FEFF 		bl	__aeabi_dmul
 651              	.LVL68:
 328:Core/Src/main.c **** 
 652              		.loc 1 328 20 view .LVU163
 653 00f0 0022     		movs	r2, #0
 654 00f2 194B     		ldr	r3, .L35+8
 655 00f4 FFF7FEFF 		bl	__aeabi_dsub
 656              	.LVL69:
 657 00f8 CDE90201 		strd	r0, [sp, #8]
 658              	.LVL70:
 330:Core/Src/main.c ****             double yi = 0.0;
 659              		.loc 1 330 13 is_stmt 1 view .LVU164
 331:Core/Src/main.c ****             int iteration = 0;
 660              		.loc 1 331 13 view .LVU165
 332:Core/Src/main.c **** 
 661              		.loc 1 332 13 view .LVU166
 334:Core/Src/main.c ****                 double xi_sq = xi * xi;
 662              		.loc 1 334 13 view .LVU167
 332:Core/Src/main.c **** 
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 20


 663              		.loc 1 332 17 is_stmt 0 view .LVU168
 664 00fc 4FF00008 		mov	r8, #0
 331:Core/Src/main.c ****             int iteration = 0;
 665              		.loc 1 331 20 view .LVU169
 666 0100 0026     		movs	r6, #0
 667 0102 0027     		movs	r7, #0
 330:Core/Src/main.c ****             double yi = 0.0;
 668              		.loc 1 330 20 view .LVU170
 669 0104 3446     		mov	r4, r6
 670 0106 3D46     		mov	r5, r7
 671 0108 CDF82490 		str	r9, [sp, #36]
 672 010c C246     		mov	r10, r8
 673 010e DDF834B0 		ldr	fp, [sp, #52]
 334:Core/Src/main.c ****                 double xi_sq = xi * xi;
 674              		.loc 1 334 19 view .LVU171
 675 0112 B9E7     		b	.L26
 676              	.LVL71:
 677              	.L33:
 334:Core/Src/main.c ****                 double xi_sq = xi * xi;
 678              		.loc 1 334 19 view .LVU172
 679              	.LBE21:
 680              	.LBE17:
 681              	.LBE16:
 324:Core/Src/main.c ****         double y0 = (double)y * y_scale - 1.0;
 682              		.loc 1 324 34 discriminator 2 view .LVU173
 683 0114 0E9F     		ldr	r7, [sp, #56]
 324:Core/Src/main.c ****         double y0 = (double)y * y_scale - 1.0;
 684              		.loc 1 324 34 is_stmt 1 discriminator 2 view .LVU174
 685 0116 0137     		adds	r7, r7, #1
 686              	.LVL72:
 687              	.L24:
 324:Core/Src/main.c ****         double y0 = (double)y * y_scale - 1.0;
 688              		.loc 1 324 23 discriminator 1 view .LVU175
 689 0118 0F9B     		ldr	r3, [sp, #60]
 690 011a 9F42     		cmp	r7, r3
 691 011c 11DA     		bge	.L34
 692              	.LBB23:
 325:Core/Src/main.c **** 
 693              		.loc 1 325 9 view .LVU176
 325:Core/Src/main.c **** 
 694              		.loc 1 325 21 is_stmt 0 view .LVU177
 695 011e 3846     		mov	r0, r7
 696 0120 FFF7FEFF 		bl	__aeabi_i2d
 697              	.LVL73:
 325:Core/Src/main.c **** 
 698              		.loc 1 325 31 view .LVU178
 699 0124 DDE91023 		ldrd	r2, [sp, #64]
 700 0128 FFF7FEFF 		bl	__aeabi_dmul
 701              	.LVL74:
 325:Core/Src/main.c **** 
 702              		.loc 1 325 16 view .LVU179
 703 012c 0022     		movs	r2, #0
 704 012e 0B4B     		ldr	r3, .L35+12
 705 0130 FFF7FEFF 		bl	__aeabi_dsub
 706              	.LVL75:
 707 0134 CDE90401 		strd	r0, [sp, #16]
 708              	.LVL76:
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 21


 327:Core/Src/main.c ****             double x0 = (double)x * x_scale - 2.5;
 709              		.loc 1 327 9 is_stmt 1 view .LVU180
 710              	.LBB22:
 327:Core/Src/main.c ****             double x0 = (double)x * x_scale - 2.5;
 711              		.loc 1 327 14 view .LVU181
 327:Core/Src/main.c ****             double x0 = (double)x * x_scale - 2.5;
 712              		.loc 1 327 18 is_stmt 0 view .LVU182
 713 0138 4FF00008 		mov	r8, #0
 714 013c 0E97     		str	r7, [sp, #56]
 715 013e C146     		mov	r9, r8
 327:Core/Src/main.c ****             double x0 = (double)x * x_scale - 2.5;
 716              		.loc 1 327 9 view .LVU183
 717 0140 CCE7     		b	.L25
 718              	.LVL77:
 719              	.L34:
 327:Core/Src/main.c ****             double x0 = (double)x * x_scale - 2.5;
 720              		.loc 1 327 9 view .LVU184
 721              	.LBE22:
 722              	.LBE23:
 723              	.LBE24:
 351:Core/Src/main.c ****         }
 352:Core/Src/main.c ****     }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****     return mandelbrot_sum;
 355:Core/Src/main.c **** }
 724              		.loc 1 355 1 view .LVU185
 725 0142 DDF82090 		ldr	r9, [sp, #32]
 354:Core/Src/main.c **** }
 726              		.loc 1 354 5 is_stmt 1 view .LVU186
 727              		.loc 1 355 1 is_stmt 0 view .LVU187
 728 0146 0798     		ldr	r0, [sp, #28]
 729 0148 4946     		mov	r1, r9
 730 014a 13B0     		add	sp, sp, #76
 731              	.LCFI8:
 732              		.cfi_def_cfa_offset 36
 733              		@ sp needed
 734 014c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 735              	.LVL78:
 736              	.L36:
 737              		.loc 1 355 1 view .LVU188
 738              		.align	2
 739              	.L35:
 740 0150 00000C40 		.word	1074528256
 741 0154 00001040 		.word	1074790400
 742 0158 00000440 		.word	1074003968
 743 015c 0000F03F 		.word	1072693248
 744              		.cfi_endproc
 745              	.LFE137:
 747              		.section	.text.Error_Handler,"ax",%progbits
 748              		.align	1
 749              		.global	Error_Handler
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 754              	Error_Handler:
 755              	.LFB138:
 356:Core/Src/main.c **** 
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 22


 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** /* USER CODE END 4 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** /**
 361:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 362:Core/Src/main.c ****   * @retval None
 363:Core/Src/main.c ****   */
 364:Core/Src/main.c **** void Error_Handler(void)
 365:Core/Src/main.c **** {
 756              		.loc 1 365 1 is_stmt 1 view -0
 757              		.cfi_startproc
 758              		@ Volatile: function does not return.
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 366:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 367:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 368:Core/Src/main.c ****   __disable_irq();
 762              		.loc 1 368 3 view .LVU190
 763              	.LBB25:
 764              	.LBI25:
 765              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 23


  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 24


  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 766              		.loc 2 140 27 view .LVU191
 767              	.LBB26:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 768              		.loc 2 142 3 view .LVU192
 769              		.syntax unified
 770              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 771 0000 72B6     		cpsid i
 772              	@ 0 "" 2
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 25


 773              		.thumb
 774              		.syntax unified
 775              	.L38:
 776              	.LBE26:
 777              	.LBE25:
 369:Core/Src/main.c ****   while (1)
 778              		.loc 1 369 3 view .LVU193
 370:Core/Src/main.c ****   {
 371:Core/Src/main.c ****   }
 779              		.loc 1 371 3 view .LVU194
 369:Core/Src/main.c ****   while (1)
 780              		.loc 1 369 9 view .LVU195
 781 0002 FEE7     		b	.L38
 782              		.cfi_endproc
 783              	.LFE138:
 785              		.section	.text.SystemClock_Config,"ax",%progbits
 786              		.align	1
 787              		.global	SystemClock_Config
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 792              	SystemClock_Config:
 793              	.LFB134:
 205:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 794              		.loc 1 205 1 view -0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 72
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798 0000 00B5     		push	{lr}
 799              	.LCFI9:
 800              		.cfi_def_cfa_offset 4
 801              		.cfi_offset 14, -4
 802 0002 93B0     		sub	sp, sp, #76
 803              	.LCFI10:
 804              		.cfi_def_cfa_offset 80
 206:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 805              		.loc 1 206 3 view .LVU197
 206:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 806              		.loc 1 206 22 is_stmt 0 view .LVU198
 807 0004 3422     		movs	r2, #52
 808 0006 0021     		movs	r1, #0
 809 0008 05A8     		add	r0, sp, #20
 810 000a FFF7FEFF 		bl	memset
 811              	.LVL79:
 207:Core/Src/main.c **** 
 812              		.loc 1 207 3 is_stmt 1 view .LVU199
 207:Core/Src/main.c **** 
 813              		.loc 1 207 22 is_stmt 0 view .LVU200
 814 000e 0023     		movs	r3, #0
 815 0010 0093     		str	r3, [sp]
 816 0012 0193     		str	r3, [sp, #4]
 817 0014 0293     		str	r3, [sp, #8]
 818 0016 0393     		str	r3, [sp, #12]
 819 0018 0493     		str	r3, [sp, #16]
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 820              		.loc 1 212 3 is_stmt 1 view .LVU201
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 26


 821              		.loc 1 212 36 is_stmt 0 view .LVU202
 822 001a 0223     		movs	r3, #2
 823 001c 0593     		str	r3, [sp, #20]
 213:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 824              		.loc 1 213 3 is_stmt 1 view .LVU203
 213:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 825              		.loc 1 213 30 is_stmt 0 view .LVU204
 826 001e 0123     		movs	r3, #1
 827 0020 0893     		str	r3, [sp, #32]
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 828              		.loc 1 214 3 is_stmt 1 view .LVU205
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 829              		.loc 1 214 41 is_stmt 0 view .LVU206
 830 0022 1023     		movs	r3, #16
 831 0024 0993     		str	r3, [sp, #36]
 215:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 832              		.loc 1 215 3 is_stmt 1 view .LVU207
 216:Core/Src/main.c ****   {
 833              		.loc 1 216 3 view .LVU208
 216:Core/Src/main.c ****   {
 834              		.loc 1 216 7 is_stmt 0 view .LVU209
 835 0026 05A8     		add	r0, sp, #20
 836 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 837              	.LVL80:
 216:Core/Src/main.c ****   {
 838              		.loc 1 216 6 discriminator 1 view .LVU210
 839 002c 60B9     		cbnz	r0, .L43
 223:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 840              		.loc 1 223 3 is_stmt 1 view .LVU211
 223:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 841              		.loc 1 223 31 is_stmt 0 view .LVU212
 842 002e 0723     		movs	r3, #7
 843 0030 0093     		str	r3, [sp]
 225:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 844              		.loc 1 225 3 is_stmt 1 view .LVU213
 225:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 845              		.loc 1 225 34 is_stmt 0 view .LVU214
 846 0032 0021     		movs	r1, #0
 847 0034 0191     		str	r1, [sp, #4]
 226:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 848              		.loc 1 226 3 is_stmt 1 view .LVU215
 226:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 849              		.loc 1 226 35 is_stmt 0 view .LVU216
 850 0036 0291     		str	r1, [sp, #8]
 227:Core/Src/main.c **** 
 851              		.loc 1 227 3 is_stmt 1 view .LVU217
 227:Core/Src/main.c **** 
 852              		.loc 1 227 36 is_stmt 0 view .LVU218
 853 0038 0391     		str	r1, [sp, #12]
 229:Core/Src/main.c ****   {
 854              		.loc 1 229 3 is_stmt 1 view .LVU219
 229:Core/Src/main.c ****   {
 855              		.loc 1 229 7 is_stmt 0 view .LVU220
 856 003a 6846     		mov	r0, sp
 857 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 858              	.LVL81:
 229:Core/Src/main.c ****   {
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 27


 859              		.loc 1 229 6 discriminator 1 view .LVU221
 860 0040 20B9     		cbnz	r0, .L44
 233:Core/Src/main.c **** 
 861              		.loc 1 233 1 view .LVU222
 862 0042 13B0     		add	sp, sp, #76
 863              	.LCFI11:
 864              		.cfi_remember_state
 865              		.cfi_def_cfa_offset 4
 866              		@ sp needed
 867 0044 5DF804FB 		ldr	pc, [sp], #4
 868              	.L43:
 869              	.LCFI12:
 870              		.cfi_restore_state
 218:Core/Src/main.c ****   }
 871              		.loc 1 218 5 is_stmt 1 view .LVU223
 872 0048 FFF7FEFF 		bl	Error_Handler
 873              	.LVL82:
 874              	.L44:
 231:Core/Src/main.c ****   }
 875              		.loc 1 231 5 view .LVU224
 876 004c FFF7FEFF 		bl	Error_Handler
 877              	.LVL83:
 878              		.cfi_endproc
 879              	.LFE134:
 881              		.section	.text.main,"ax",%progbits
 882              		.align	1
 883              		.global	main
 884              		.syntax unified
 885              		.thumb
 886              		.thumb_func
 888              	main:
 889              	.LFB133:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 890              		.loc 1 96 1 view -0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 895              	.LCFI13:
 896              		.cfi_def_cfa_offset 24
 897              		.cfi_offset 3, -24
 898              		.cfi_offset 4, -20
 899              		.cfi_offset 5, -16
 900              		.cfi_offset 6, -12
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 104:Core/Src/main.c **** 
 903              		.loc 1 104 3 view .LVU226
 904 0002 FFF7FEFF 		bl	HAL_Init
 905              	.LVL84:
 111:Core/Src/main.c **** 
 906              		.loc 1 111 3 view .LVU227
 907 0006 FFF7FEFF 		bl	SystemClock_Config
 908              	.LVL85:
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 909              		.loc 1 118 3 view .LVU228
 910 000a FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 28


 911              	.LVL86:
 123:Core/Src/main.c **** 
 912              		.loc 1 123 3 view .LVU229
 913              	.LBB27:
 123:Core/Src/main.c **** 
 914              		.loc 1 123 8 view .LVU230
 123:Core/Src/main.c **** 
 915              		.loc 1 123 12 is_stmt 0 view .LVU231
 916 000e 0024     		movs	r4, #0
 123:Core/Src/main.c **** 
 917              		.loc 1 123 3 view .LVU232
 918 0010 3AE0     		b	.L46
 919              	.LVL87:
 920              	.L47:
 128:Core/Src/main.c **** 
 921              		.loc 1 128 4 is_stmt 1 view .LVU233
 922 0012 3E4D     		ldr	r5, .L52
 923 0014 0122     		movs	r2, #1
 924 0016 1146     		mov	r1, r2
 925 0018 2846     		mov	r0, r5
 926 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 927              	.LVL88:
 131:Core/Src/main.c **** 
 928              		.loc 1 131 4 view .LVU234
 131:Core/Src/main.c **** 
 929              		.loc 1 131 17 is_stmt 0 view .LVU235
 930 001e FFF7FEFF 		bl	HAL_GetTick
 931              	.LVL89:
 131:Core/Src/main.c **** 
 932              		.loc 1 131 15 discriminator 1 view .LVU236
 933 0022 3B4F     		ldr	r7, .L52+4
 934 0024 3860     		str	r0, [r7]
 134:Core/Src/main.c **** 
 935              		.loc 1 134 4 is_stmt 1 view .LVU237
 134:Core/Src/main.c **** 
 936              		.loc 1 134 70 is_stmt 0 view .LVU238
 937 0026 3B4B     		ldr	r3, .L52+8
 938 0028 53F82400 		ldr	r0, [r3, r4, lsl #2]
 134:Core/Src/main.c **** 
 939              		.loc 1 134 15 view .LVU239
 940 002c 4FF47A72 		mov	r2, #1000
 941 0030 0146     		mov	r1, r0
 942 0032 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 943              	.LVL90:
 134:Core/Src/main.c **** 
 944              		.loc 1 134 13 discriminator 1 view .LVU240
 945 0036 384E     		ldr	r6, .L52+12
 946 0038 C6E90001 		strd	r0, [r6]
 137:Core/Src/main.c **** 
 947              		.loc 1 137 4 is_stmt 1 view .LVU241
 137:Core/Src/main.c **** 
 948              		.loc 1 137 15 is_stmt 0 view .LVU242
 949 003c FFF7FEFF 		bl	HAL_GetTick
 950              	.LVL91:
 137:Core/Src/main.c **** 
 951              		.loc 1 137 13 discriminator 1 view .LVU243
 952 0040 364B     		ldr	r3, .L52+16
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 29


 953 0042 1860     		str	r0, [r3]
 140:Core/Src/main.c **** 
 954              		.loc 1 140 4 is_stmt 1 view .LVU244
 140:Core/Src/main.c **** 
 955              		.loc 1 140 30 is_stmt 0 view .LVU245
 956 0044 3B68     		ldr	r3, [r7]
 957 0046 C31A     		subs	r3, r0, r3
 140:Core/Src/main.c **** 
 958              		.loc 1 140 19 view .LVU246
 959 0048 354A     		ldr	r2, .L52+20
 960 004a 1360     		str	r3, [r2]
 143:Core/Src/main.c **** 
 961              		.loc 1 143 4 is_stmt 1 view .LVU247
 143:Core/Src/main.c **** 
 962              		.loc 1 143 23 is_stmt 0 view .LVU248
 963 004c 354A     		ldr	r2, .L52+24
 964 004e 02EBC402 		add	r2, r2, r4, lsl #3
 965 0052 D6E90001 		ldrd	r0, [r6]
 966 0056 C2E90001 		strd	r0, [r2]
 145:Core/Src/main.c **** 
 967              		.loc 1 145 4 is_stmt 1 view .LVU249
 145:Core/Src/main.c **** 
 968              		.loc 1 145 19 is_stmt 0 view .LVU250
 969 005a 334A     		ldr	r2, .L52+28
 970 005c 42F82430 		str	r3, [r2, r4, lsl #2]
 149:Core/Src/main.c **** 
 971              		.loc 1 149 4 is_stmt 1 view .LVU251
 972 0060 0122     		movs	r2, #1
 973 0062 0221     		movs	r1, #2
 974 0064 2846     		mov	r0, r5
 975 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 976              	.LVL92:
 152:Core/Src/main.c **** 
 977              		.loc 1 152 4 view .LVU252
 978 006a 4FF47A70 		mov	r0, #1000
 979 006e FFF7FEFF 		bl	HAL_Delay
 980              	.LVL93:
 155:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 981              		.loc 1 155 4 view .LVU253
 982 0072 0022     		movs	r2, #0
 983 0074 0121     		movs	r1, #1
 984 0076 2846     		mov	r0, r5
 985 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 986              	.LVL94:
 156:Core/Src/main.c **** 
 987              		.loc 1 156 4 view .LVU254
 988 007c 0022     		movs	r2, #0
 989 007e 0221     		movs	r1, #2
 990 0080 2846     		mov	r0, r5
 991 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 992              	.LVL95:
 123:Core/Src/main.c **** 
 993              		.loc 1 123 27 discriminator 3 view .LVU255
 994 0086 0134     		adds	r4, r4, #1
 995              	.LVL96:
 996              	.L46:
 123:Core/Src/main.c **** 
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 30


 997              		.loc 1 123 21 discriminator 1 view .LVU256
 998 0088 042C     		cmp	r4, #4
 999 008a C2DD     		ble	.L47
 1000              	.LBE27:
 1001              	.LBB28:
 163:Core/Src/main.c **** 	  // Repeated Task 3 for double-precision arithmetic:
 1002              		.loc 1 163 12 is_stmt 0 view .LVU257
 1003 008c 0024     		movs	r4, #0
 1004              	.LVL97:
 163:Core/Src/main.c **** 	  // Repeated Task 3 for double-precision arithmetic:
 1005              		.loc 1 163 12 view .LVU258
 1006 008e 3AE0     		b	.L48
 1007              	.LVL98:
 1008              	.L49:
 166:Core/Src/main.c **** 
 1009              		.loc 1 166 4 is_stmt 1 view .LVU259
 1010 0090 1E4D     		ldr	r5, .L52
 1011 0092 0122     		movs	r2, #1
 1012 0094 1146     		mov	r1, r2
 1013 0096 2846     		mov	r0, r5
 1014 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1015              	.LVL99:
 168:Core/Src/main.c **** 	  checksum = calculate_mandelbrot_double(image_sizes[i], image_sizes[i], MAX_ITER);
 1016              		.loc 1 168 4 view .LVU260
 168:Core/Src/main.c **** 	  checksum = calculate_mandelbrot_double(image_sizes[i], image_sizes[i], MAX_ITER);
 1017              		.loc 1 168 17 is_stmt 0 view .LVU261
 1018 009c FFF7FEFF 		bl	HAL_GetTick
 1019              	.LVL100:
 168:Core/Src/main.c **** 	  checksum = calculate_mandelbrot_double(image_sizes[i], image_sizes[i], MAX_ITER);
 1020              		.loc 1 168 15 discriminator 1 view .LVU262
 1021 00a0 1B4F     		ldr	r7, .L52+4
 1022 00a2 3860     		str	r0, [r7]
 169:Core/Src/main.c **** 	  end_time = HAL_GetTick();
 1023              		.loc 1 169 4 is_stmt 1 view .LVU263
 169:Core/Src/main.c **** 	  end_time = HAL_GetTick();
 1024              		.loc 1 169 54 is_stmt 0 view .LVU264
 1025 00a4 1B4B     		ldr	r3, .L52+8
 1026 00a6 53F82400 		ldr	r0, [r3, r4, lsl #2]
 169:Core/Src/main.c **** 	  end_time = HAL_GetTick();
 1027              		.loc 1 169 15 view .LVU265
 1028 00aa 4FF47A72 		mov	r2, #1000
 1029 00ae 0146     		mov	r1, r0
 1030 00b0 FFF7FEFF 		bl	calculate_mandelbrot_double
 1031              	.LVL101:
 169:Core/Src/main.c **** 	  end_time = HAL_GetTick();
 1032              		.loc 1 169 13 discriminator 1 view .LVU266
 1033 00b4 184E     		ldr	r6, .L52+12
 1034 00b6 C6E90001 		strd	r0, [r6]
 170:Core/Src/main.c **** 	  execution_time = end_time - start_time;
 1035              		.loc 1 170 4 is_stmt 1 view .LVU267
 170:Core/Src/main.c **** 	  execution_time = end_time - start_time;
 1036              		.loc 1 170 15 is_stmt 0 view .LVU268
 1037 00ba FFF7FEFF 		bl	HAL_GetTick
 1038              	.LVL102:
 170:Core/Src/main.c **** 	  execution_time = end_time - start_time;
 1039              		.loc 1 170 13 discriminator 1 view .LVU269
 1040 00be 174B     		ldr	r3, .L52+16
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 31


 1041 00c0 1860     		str	r0, [r3]
 171:Core/Src/main.c **** 
 1042              		.loc 1 171 4 is_stmt 1 view .LVU270
 171:Core/Src/main.c **** 
 1043              		.loc 1 171 30 is_stmt 0 view .LVU271
 1044 00c2 3B68     		ldr	r3, [r7]
 1045 00c4 C31A     		subs	r3, r0, r3
 171:Core/Src/main.c **** 
 1046              		.loc 1 171 19 view .LVU272
 1047 00c6 164A     		ldr	r2, .L52+20
 1048 00c8 1360     		str	r3, [r2]
 174:Core/Src/main.c **** 	  times_double[i] = execution_time;
 1049              		.loc 1 174 4 is_stmt 1 view .LVU273
 174:Core/Src/main.c **** 	  times_double[i] = execution_time;
 1050              		.loc 1 174 24 is_stmt 0 view .LVU274
 1051 00ca 184A     		ldr	r2, .L52+32
 1052 00cc 02EBC402 		add	r2, r2, r4, lsl #3
 1053 00d0 D6E90001 		ldrd	r0, [r6]
 1054 00d4 C2E90001 		strd	r0, [r2]
 175:Core/Src/main.c **** 
 1055              		.loc 1 175 4 is_stmt 1 view .LVU275
 175:Core/Src/main.c **** 
 1056              		.loc 1 175 20 is_stmt 0 view .LVU276
 1057 00d8 154A     		ldr	r2, .L52+36
 1058 00da 42F82430 		str	r3, [r2, r4, lsl #2]
 177:Core/Src/main.c **** 	  HAL_Delay(1000);
 1059              		.loc 1 177 4 is_stmt 1 view .LVU277
 1060 00de 0122     		movs	r2, #1
 1061 00e0 0221     		movs	r1, #2
 1062 00e2 2846     		mov	r0, r5
 1063 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1064              	.LVL103:
 178:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 1065              		.loc 1 178 4 view .LVU278
 1066 00e8 4FF47A70 		mov	r0, #1000
 1067 00ec FFF7FEFF 		bl	HAL_Delay
 1068              	.LVL104:
 179:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1069              		.loc 1 179 4 view .LVU279
 1070 00f0 0022     		movs	r2, #0
 1071 00f2 0121     		movs	r1, #1
 1072 00f4 2846     		mov	r0, r5
 1073 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1074              	.LVL105:
 180:Core/Src/main.c **** 
 1075              		.loc 1 180 4 view .LVU280
 1076 00fa 0022     		movs	r2, #0
 1077 00fc 0221     		movs	r1, #2
 1078 00fe 2846     		mov	r0, r5
 1079 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1080              	.LVL106:
 163:Core/Src/main.c **** 	  // Repeated Task 3 for double-precision arithmetic:
 1081              		.loc 1 163 27 discriminator 3 view .LVU281
 1082 0104 0134     		adds	r4, r4, #1
 1083              	.LVL107:
 1084              	.L48:
 163:Core/Src/main.c **** 	  // Repeated Task 3 for double-precision arithmetic:
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 32


 1085              		.loc 1 163 21 discriminator 1 view .LVU282
 1086 0106 042C     		cmp	r4, #4
 1087 0108 C2DD     		ble	.L49
 1088              	.L50:
 1089              	.LBE28:
 191:Core/Src/main.c ****   {
 1090              		.loc 1 191 3 view .LVU283
 196:Core/Src/main.c ****   /* USER CODE END 3 */
 1091              		.loc 1 196 3 view .LVU284
 191:Core/Src/main.c ****   {
 1092              		.loc 1 191 9 view .LVU285
 1093 010a FEE7     		b	.L50
 1094              	.L53:
 1095              		.align	2
 1096              	.L52:
 1097 010c 00040240 		.word	1073873920
 1098 0110 00000000 		.word	start_time
 1099 0114 00000000 		.word	image_sizes
 1100 0118 00000000 		.word	checksum
 1101 011c 00000000 		.word	end_time
 1102 0120 00000000 		.word	execution_time
 1103 0124 00000000 		.word	checksums_fixed
 1104 0128 00000000 		.word	times_fixed
 1105 012c 00000000 		.word	checksums_double
 1106 0130 00000000 		.word	times_double
 1107              		.cfi_endproc
 1108              	.LFE133:
 1110              		.global	times_double
 1111              		.section	.bss.times_double,"aw",%nobits
 1112              		.align	2
 1115              	times_double:
 1116 0000 00000000 		.space	20
 1116      00000000 
 1116      00000000 
 1116      00000000 
 1116      00000000 
 1117              		.global	times_fixed
 1118              		.section	.bss.times_fixed,"aw",%nobits
 1119              		.align	2
 1122              	times_fixed:
 1123 0000 00000000 		.space	20
 1123      00000000 
 1123      00000000 
 1123      00000000 
 1123      00000000 
 1124              		.global	checksums_double
 1125              		.section	.bss.checksums_double,"aw",%nobits
 1126              		.align	3
 1129              	checksums_double:
 1130 0000 00000000 		.space	40
 1130      00000000 
 1130      00000000 
 1130      00000000 
 1130      00000000 
 1131              		.global	checksums_fixed
 1132              		.section	.bss.checksums_fixed,"aw",%nobits
 1133              		.align	3
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 33


 1136              	checksums_fixed:
 1137 0000 00000000 		.space	40
 1137      00000000 
 1137      00000000 
 1137      00000000 
 1137      00000000 
 1138              		.global	image_sizes
 1139              		.section	.rodata.image_sizes,"a"
 1140              		.align	2
 1143              	image_sizes:
 1144 0000 80000000 		.word	128
 1145 0004 A0000000 		.word	160
 1146 0008 C0000000 		.word	192
 1147 000c E0000000 		.word	224
 1148 0010 00010000 		.word	256
 1149              		.global	execution_time
 1150              		.section	.bss.execution_time,"aw",%nobits
 1151              		.align	2
 1154              	execution_time:
 1155 0000 00000000 		.space	4
 1156              		.global	end_time
 1157              		.section	.bss.end_time,"aw",%nobits
 1158              		.align	2
 1161              	end_time:
 1162 0000 00000000 		.space	4
 1163              		.global	start_time
 1164              		.section	.bss.start_time,"aw",%nobits
 1165              		.align	2
 1168              	start_time:
 1169 0000 00000000 		.space	4
 1170              		.global	checksum
 1171              		.section	.bss.checksum,"aw",%nobits
 1172              		.align	3
 1175              	checksum:
 1176 0000 00000000 		.space	8
 1176      00000000 
 1177              		.text
 1178              	.Letext0:
 1179              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1180              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1181              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1182              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1183              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1184              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1185              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1186              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1187              		.file 11 "<built-in>"
ARM GAS  C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:117    .text.MX_GPIO_Init:00000060 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:126    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:132    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:429    .text.calculate_mandelbrot_fixed_point_arithmetic:00000154 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:439    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:445    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:740    .text.calculate_mandelbrot_double:00000150 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:748    .text.Error_Handler:00000000 $t
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:754    .text.Error_Handler:00000000 Error_Handler
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:786    .text.SystemClock_Config:00000000 $t
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:792    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:882    .text.main:00000000 $t
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:888    .text.main:00000000 main
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1097   .text.main:0000010c $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1168   .bss.start_time:00000000 start_time
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1143   .rodata.image_sizes:00000000 image_sizes
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1175   .bss.checksum:00000000 checksum
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1161   .bss.end_time:00000000 end_time
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1154   .bss.execution_time:00000000 execution_time
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1136   .bss.checksums_fixed:00000000 checksums_fixed
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1122   .bss.times_fixed:00000000 times_fixed
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1129   .bss.checksums_double:00000000 checksums_double
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1115   .bss.times_double:00000000 times_double
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1112   .bss.times_double:00000000 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1119   .bss.times_fixed:00000000 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1126   .bss.checksums_double:00000000 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1133   .bss.checksums_fixed:00000000 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1140   .rodata.image_sizes:00000000 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1151   .bss.execution_time:00000000 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1158   .bss.end_time:00000000 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1165   .bss.start_time:00000000 $d
C:\Users\joshu\AppData\Local\Temp\ccTPYuvP.s:1172   .bss.checksum:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_i2d
__aeabi_ddiv
__aeabi_d2iz
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmpgt
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
